{{- if .Values.hooks.preUpgrade.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "kubechat.fullname" . }}-pre-upgrade
  namespace: {{ include "kubechat.namespace" . }}
  labels:
    {{- include "kubechat.labels" . | nindent 4 }}
    app.kubernetes.io/component: pre-upgrade-hook
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  ttlSecondsAfterFinished: {{ .Values.hooks.preUpgrade.ttlSecondsAfterFinished }}
  backoffLimit: {{ .Values.hooks.preUpgrade.backoffLimit }}
  template:
    metadata:
      name: {{ include "kubechat.fullname" . }}-pre-upgrade
      labels:
        {{- include "kubechat.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: pre-upgrade-hook
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "kubechat.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.hooks.preUpgrade.podSecurityContext | nindent 8 }}
      containers:
      - name: pre-upgrade
        image: "{{ .Values.hooks.preUpgrade.image.repository }}:{{ .Values.hooks.preUpgrade.image.tag }}"
        imagePullPolicy: {{ .Values.hooks.preUpgrade.image.pullPolicy }}
        securityContext:
          {{- toYaml .Values.hooks.preUpgrade.securityContext | nindent 10 }}
        command:
          - /bin/bash
          - -c
          - |
            echo "=== KubeChat Pre-Upgrade Hook ==="
            echo "Namespace: {{ include "kubechat.namespace" . }}"
            echo "Release: {{ .Release.Name }}"
            echo "Chart: {{ .Chart.Name }}-{{ .Chart.Version }}"

            # Check existing deployments
            if kubectl get deployment -n "{{ include "kubechat.namespace" . }}" -l "app.kubernetes.io/name={{ include "kubechat.name" . }}" >/dev/null 2>&1; then
              echo "Found existing KubeChat deployment"
              # Basic health check
              kubectl get pods -n "{{ include "kubechat.namespace" . }}" -l "app.kubernetes.io/name={{ include "kubechat.name" . }}"
            else
              echo "No existing deployment found, treating as fresh install"
            fi

            echo "Pre-upgrade validation completed successfully"
        env:
        - name: RELEASE_NAME
          value: {{ .Release.Name | quote }}
        - name: RELEASE_NAMESPACE
          value: {{ include "kubechat.namespace" . | quote }}
        {{- with .Values.hooks.preUpgrade.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        resources:
          {{- toYaml .Values.hooks.preUpgrade.resources | nindent 10 }}
{{- end }}