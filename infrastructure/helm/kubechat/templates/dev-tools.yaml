{{- if .Values.devTools.enabled }}
# PgAdmin for database management
{{- if .Values.devTools.pgadmin.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubechat.fullname" . }}-pgadmin
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubechat.labels" . | nindent 4 }}
    app.kubernetes.io/component: pgadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "kubechat.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: pgadmin
  template:
    metadata:
      labels:
        {{- include "kubechat.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: pgadmin
    spec:
      containers:
        - name: pgadmin
          image: {{ .Values.devTools.pgadmin.image }}
          ports:
            - containerPort: 80
          env:
            {{- range $key, $value := .Values.devTools.pgadmin.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
      volumes:
        - name: pgadmin-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "kubechat.fullname" . }}-pgadmin
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubechat.labels" . | nindent 4 }}
    app.kubernetes.io/component: pgadmin
spec:
  type: {{ .Values.devTools.pgadmin.service.type }}
  ports:
    - port: {{ .Values.devTools.pgadmin.service.port }}
      targetPort: 80
      {{- if .Values.devTools.pgadmin.service.nodePort }}
      nodePort: {{ .Values.devTools.pgadmin.service.nodePort }}
      {{- end }}
  selector:
    {{- include "kubechat.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: pgadmin
{{- end }}

---
# Redis Commander for Redis management
{{- if .Values.devTools.redisCommander.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubechat.fullname" . }}-redis-commander
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubechat.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis-commander
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "kubechat.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis-commander
  template:
    metadata:
      labels:
        {{- include "kubechat.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis-commander
    spec:
      containers:
        - name: redis-commander
          image: {{ .Values.devTools.redisCommander.image }}
          ports:
            - containerPort: 8081
          env:
            {{- range $key, $value := .Values.devTools.redisCommander.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "kubechat.fullname" . }}-secret
                  key: redis-password
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "kubechat.fullname" . }}-redis-commander
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubechat.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis-commander
spec:
  type: {{ .Values.devTools.redisCommander.service.type }}
  ports:
    - port: {{ .Values.devTools.redisCommander.service.port }}
      targetPort: 8081
      {{- if .Values.devTools.redisCommander.service.nodePort }}
      nodePort: {{ .Values.devTools.redisCommander.service.nodePort }}
      {{- end }}
  selector:
    {{- include "kubechat.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: redis-commander
{{- end }}
{{- end }}