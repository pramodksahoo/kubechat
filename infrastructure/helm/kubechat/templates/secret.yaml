apiVersion: v1
kind: Secret
metadata:
  name: {{ include "kubechat.fullname" . }}-secret
  namespace: {{ include "kubechat.namespace" . }}
  labels:
    {{- include "kubechat.labels" . | nindent 4 }}
  annotations:
    helm.sh/resource-policy: keep
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ include "kubechat.namespace" . }}
    {{- with .Values.secret.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
data:
  {{- $existingSecret := lookup "v1" "Secret" (include "kubechat.namespace" .) (printf "%s-secret" (include "kubechat.fullname" .)) }}

  # Database credentials with secure auto-generated passwords (preserve existing)
  {{- if .Values.postgresql.enabled }}
  {{- if and $existingSecret $existingSecret.data }}
  postgresql-password: {{ index $existingSecret.data "postgresql-password" | quote }}
  {{- else }}
  postgresql-password: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  {{- end }}

  # Redis credentials with secure auto-generated passwords (preserve existing)
  {{- if .Values.redis.enabled }}
  {{- if and $existingSecret $existingSecret.data }}
  redis-password: {{ index $existingSecret.data "redis-password" | quote }}
  {{- else }}
  redis-password: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  {{- end }}

  # JWT secret for authentication (SECURITY CRITICAL) (preserve existing)
  {{- if .Values.jwtSecret }}
  {{- if lt (len .Values.jwtSecret) 32 }}
  {{- fail "SECURITY ERROR: JWT_SECRET must be at least 32 characters long for production security" }}
  {{- end }}
  # Check for weak patterns
  {{- $lowerSecret := lower .Values.jwtSecret }}
  {{- if or (contains "secret" $lowerSecret) (contains "password" $lowerSecret) (contains "jwt" $lowerSecret) (contains "token" $lowerSecret) (contains "key" $lowerSecret) }}
  {{- fail "SECURITY ERROR: JWT_SECRET contains weak patterns. Use a strong random secret without common words." }}
  {{- end }}
  jwt-secret: {{ .Values.jwtSecret | b64enc | quote }}
  {{- else }}
  {{- if and $existingSecret $existingSecret.data }}
  jwt-secret: {{ index $existingSecret.data "jwt-secret" | quote }}
  {{- else }}
  # Auto-generate secure JWT secret (48 characters, no weak patterns)
  jwt-secret: {{ randAlphaNum 48 | b64enc | quote }}
  {{- end }}
  {{- end }}

  # Encryption key for sensitive data (preserve existing)
  {{- if .Values.encryptionKey }}
  encryption-key: {{ .Values.encryptionKey | b64enc | quote }}
  {{- else }}
  {{- if and $existingSecret $existingSecret.data }}
  encryption-key: {{ index $existingSecret.data "encryption-key" | quote }}
  {{- else }}
  encryption-key: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  {{- end }}

  # Additional secret data from values
  {{- with .Values.secret.data }}
  {{- range $key, $value := . }}
  {{ $key }}: {{ $value | b64enc | quote }}
  {{- end }}
  {{- end }}